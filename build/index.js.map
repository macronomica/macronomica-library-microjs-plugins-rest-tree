{"version":3,"sources":["../src/index.js"],"names":["supportedMethodKeys","Object","keys","methods","schema","options","api","forEach","includes","name","micro","add","plugin","actions"],"mappings":";;;;;;;AAAA;;;;;;AACA,IAAMA,sBAAsBC,OAAOC,IAAP,mBAA5B;;AAEO,IAAMC,6CAAN;;kBAEQ,UAACC,MAAD;AAAA,MAASC,OAAT,uEAAmB,EAAnB;AAAA,SAA0B,iBAAS;AAAA,2BACNA,OADM,CACxCF,OADwC;AAAA,QACxCA,OADwC,oCAC9BH,mBAD8B;;AAEhD,QAAMM,MAAM,EAAZ;;AAEAH,YAAQI,OAAR,CAAgB,gBAAQ;AACtB,UAAIP,oBAAoBQ,QAApB,CAA6BC,IAA7B,CAAJ,EAAwC;AACtCC,cAAMC,GAAN,UAAkBF,IAAlB,EAA2BH,IAAKG,IAAL,IAAc,YAAa;AAAA,8BAChCC,MAAME,MAAN,CAAa,KAAb,CADgC;AAAA,cAC5CC,OAD4C,iBAC5CA,OAD4C;;AAEpD,iBAAO,kBAAkBJ,IAAlB,EAAyBC,KAAzB,EAAgCG,OAAhC,EAAyCT,MAAzC,6BAAP;AACD,SAHD;AAID;AACF,KAPD;;AASA,WAAOE,GAAP;AACD,GAdc;AAAA,C","file":"index.js","sourcesContent":["import supportedMethods from './methods';\nconst supportedMethodKeys = Object.keys(supportedMethods);\n\nexport const methods = supportedMethods;\n\nexport default (schema, options = {}) => micro => {\n  const { methods = supportedMethodKeys } = options;\n  const api = {};\n\n  methods.forEach(name => {\n    if (supportedMethodKeys.includes(name)) {\n      micro.add(`cmd:${ name }`, api[ name ] = (...rest) => {\n        const { actions } = micro.plugin('dal');\n        return supportedMethods[ name ](micro, actions, schema)(...rest)\n      })\n    }\n  });\n\n  return api\n};"]}